C51 COMPILER V9.60.0.0   DEBUG                                                             03/06/2020 21:17:47 PAGE 1   


C51 COMPILER V9.60.0.0, COMPILATION OF MODULE DEBUG
OBJECT MODULE PLACED IN DEBUG.obj
COMPILER INVOKED BY: d:\Keil_v5\C51\BIN\C51.EXE GPIO\DEBUG.C LARGE OPTIMIZE(8,SPEED) BROWSE INCDIR(.\GPIO) DEBUG OBJECTE
                    -XTEND PRINT(.\DEBUG.lst) TABS(2) OBJECT(DEBUG.obj)

line level    source

   1          /********************************** (C) COPYRIGHT *******************************
   2          * File Name          : DEBUG.C
   3          * Author             : WCH
   4          * Version            : V1.3
   5          * Date               : 2016/06/24
   6          * Description        : CH559 DEBUG Interface
   7                               (1)¡¢´®¿Ú0Êä³ö´òÓ¡ÐÅÏ¢£¬²¨ÌØÂÊ¿É±ä;                         
   8          *******************************************************************************/
   9          
  10          #include <stdio.h>
  11          #include "CH559.H"
  12          
  13          #define  FREQ_SYS 12000000                                                     //ÏµÍ³Ö÷Æµ12MHz
  14          #ifndef  BUAD
  15          #define  BUAD    57600
  16          #endif
  17          
  18          /*******************************************************************************
  19          * Function Name  : CfgFsys( )
  20          * Description    : CH559Ê±ÖÓÑ¡ÔñºÍÅäÖÃº¯Êý,Ä¬ÈÏÊ¹ÓÃÄÚ²¿¾§Õñ12MHz£¬Èç¹û¶¨ÒåÁËFREQ_SYS¿ÉÒÔ
  21                             ¸ù¾ÝPLL_CFGºÍCLOCK_CFGÅäÖÃµÃµ½£¬¹«Ê½ÈçÏÂ£º
  22                             Fsys = (Fosc * ( PLL_CFG & MASK_PLL_MULT ))/(CLOCK_CFG & MASK_SYS_CK_DIV);
  23                             ¾ßÌåÊ±ÖÓÐèÒª×Ô¼ºÅäÖÃ
  24          * Input          : None
  25          * Output         : None
  26          * Return         : None
  27          *******************************************************************************/ 
  28          void  CfgFsys( )  
  29          {
  30   1          SAFE_MOD = 0x55;                                                           //¿ªÆô°²È«Ä£Ê½
  31   1          SAFE_MOD = 0xAA;                                                 
  32   1      //  CLOCK_CFG |= bOSC_EN_XT;                                                   //Ê¹ÄÜÍâ²¿¾§Õñ             
             -                            
  33   1      //  CLOCK_CFG &= ~bOSC_EN_INT;                                              
  34   1      //  CLOCK_CFG &= ~MASK_SYS_CK_DIV;
  35   1      //  CLOCK_CFG |= 6;                                                            //ÅäÖÃÏµÍ³Ê±ÖÓ48MHz
  36   1      //  CLOCK_CFG |= 8;                                                            //ÅäÖÃÏµÍ³Ê±ÖÓ36MHz
  37   1      //  CLOCK_CFG |= 10;                                                           //ÅäÖÃÏµÍ³Ê±ÖÓ28.8MHz
  38   1      //  CLOCK_CFG |= 12;                                                           //ÅäÖÃÏµÍ³Ê±ÖÓ24MHz
  39   1      //  CLOCK_CFG |= 16;                                                           //ÅäÖÃÏµÍ³Ê±ÖÓ18MHz    
  40   1          SAFE_MOD = 0xFF;                                                           //¹Ø±Õ°²È«Ä£Ê½  
  41   1      //  Èç¹ûÐÞ¸ÄÖ÷Æµ£¬ÒªÍ¬Ê±ÐÞ¸ÄFREQ_SYS£¬·ñÔò»áÔì³ÉÑÓÊ±º¯Êý²»×¼
  42   1      }
  43          
  44          /*******************************************************************************
  45          * Function Name  : mDelayus(UNIT16 n)
  46          * Description    : usÑÓÊ±º¯Êý
  47          * Input          : UNIT16 n
  48          * Output         : None
  49          * Return         : None
  50          *******************************************************************************/ 
  51          void  mDelayuS( UINT16 n )  // ÒÔuSÎªµ¥Î»ÑÓÊ±
  52          {
  53   1        while ( n ) {  // total = 12~13 Fsys cycles, 1uS @Fsys=12MHz
C51 COMPILER V9.60.0.0   DEBUG                                                             03/06/2020 21:17:47 PAGE 2   

  54   2          ++ SAFE_MOD;  // 2 Fsys cycles, for higher Fsys, add operation here
  55   2      #ifdef  FREQ_SYS
  56   2      #if   FREQ_SYS >= 14000000
                  ++ SAFE_MOD;
              #endif
  59   2      #if   FREQ_SYS >= 16000000
                  ++ SAFE_MOD;
              #endif
  62   2      #if   FREQ_SYS >= 18000000
                  ++ SAFE_MOD;
              #endif
  65   2      #if   FREQ_SYS >= 20000000
                  ++ SAFE_MOD;
              #endif
  68   2      #if   FREQ_SYS >= 22000000
                  ++ SAFE_MOD;
              #endif
  71   2      #if   FREQ_SYS >= 24000000
                  ++ SAFE_MOD;
              #endif
  74   2      #if   FREQ_SYS >= 26000000
                  ++ SAFE_MOD;
              #endif
  77   2      #if   FREQ_SYS >= 28000000
                  ++ SAFE_MOD;
              #endif
  80   2      #if   FREQ_SYS >= 30000000
                  ++ SAFE_MOD;
              #endif
  83   2      #if   FREQ_SYS >= 32000000
                  ++ SAFE_MOD;
              #endif
  86   2      #if   FREQ_SYS >= 34000000
                  ++ SAFE_MOD;
              #endif
  89   2      #if   FREQ_SYS >= 36000000
                  ++ SAFE_MOD;
              #endif
  92   2      #if   FREQ_SYS >= 38000000
                  ++ SAFE_MOD;
              #endif
  95   2      #if   FREQ_SYS >= 40000000
                  ++ SAFE_MOD;
              #endif
  98   2      #if   FREQ_SYS >= 42000000
                  ++ SAFE_MOD;
              #endif
 101   2      #if   FREQ_SYS >= 44000000
                  ++ SAFE_MOD;
              #endif
 104   2      #if   FREQ_SYS >= 46000000
                  ++ SAFE_MOD;
              #endif
 107   2      #if   FREQ_SYS >= 48000000
                  ++ SAFE_MOD;
              #endif
 110   2      #if   FREQ_SYS >= 50000000
                  ++ SAFE_MOD;
              #endif
 113   2      #if   FREQ_SYS >= 52000000
                  ++ SAFE_MOD;
              #endif
C51 COMPILER V9.60.0.0   DEBUG                                                             03/06/2020 21:17:47 PAGE 3   

 116   2      #if   FREQ_SYS >= 54000000
                  ++ SAFE_MOD;
              #endif
 119   2      #if   FREQ_SYS >= 56000000
                  ++ SAFE_MOD;
              #endif
 122   2      #endif
 123   2          -- n;
 124   2        }
 125   1      }
 126          
 127          /*******************************************************************************
 128          * Function Name  : mDelayms(UNIT16 n)
 129          * Description    : msÑÓÊ±º¯Êý
 130          * Input          : UNIT16 n
 131          * Output         : None
 132          * Return         : None
 133          *******************************************************************************/
 134          void  mDelaymS( UINT16 n )                                                  // ÒÔmSÎªµ¥Î»ÑÓÊ±
 135          {
 136   1        while ( n ) 
 137   1        {
 138   2          mDelayuS( 1000 );
 139   2          -- n;
 140   2        }
 141   1      }                                         
 142          
 143          /*******************************************************************************
 144          * Function Name  : CH559UART0Alter()
 145          * Description    : CH559´®¿Ú0Òý½ÅÓ³Éä,´®¿ÚÓ³Éäµ½P0.2ºÍP0.3
 146          * Input          : None
 147          * Output         : None
 148          * Return         : None
 149          *******************************************************************************/
 150          void CH559UART0Alter()
 151          {
 152   1          PORT_CFG |= bP0_OC;
 153   1          P0_DIR |= bTXD_;
 154   1          P0_PU |= bTXD_ | bRXD_;
 155   1          PIN_FUNC |= bUART0_PIN_X;                                                  //´®¿ÚÓ³Éäµ½P0.2ºÍP0.3
 156   1      }
 157          
 158          /*******************************************************************************
 159          * Function Name  : mInitSTDIO()
 160          * Description    : CH559´®¿Ú0³õÊ¼»¯,Ä¬ÈÏÊ¹ÓÃT1×÷UART0µÄ²¨ÌØÂÊ·¢ÉúÆ÷,Ò²¿ÉÒÔÊ¹ÓÃT2
 161                             ×÷Îª²¨ÌØÂÊ·¢ÉúÆ÷
 162          * Input          : None
 163          * Output         : None
 164          * Return         : None
 165          *******************************************************************************/
 166          void  mInitSTDIO( )
 167          {
 168   1          UINT32 x;
 169   1          UINT8 x2; 
 170   1      
 171   1          SM0 = 0;
 172   1          SM1 = 1;
 173   1          SM2 = 0;                                                                   //´®¿Ú0Ê¹ÓÃÄ£Ê½1
 174   1                                                                                     //Ê¹ÓÃTimer1×÷Îª²¨ÌØÂÊ·¢ÉúÆ
             -÷
 175   1          RCLK = 0;                                                                  //UART0½ÓÊÕÊ±ÖÓ
 176   1          TCLK = 0;                                                                  //UART0·¢ËÍÊ±ÖÓ
C51 COMPILER V9.60.0.0   DEBUG                                                             03/06/2020 21:17:47 PAGE 4   

 177   1          PCON |= SMOD;
 178   1          x = 10 * FREQ_SYS / BUAD / 16;                                             //Èç¹û¸ü¸ÄÖ÷Æµ£¬×¢ÒâxµÄÖµ²»
             -ÒªÒç³ö                            
 179   1          x2 = x % 10;
 180   1          x /= 10;
 181   1          if ( x2 >= 5 ) x ++;                                                       //ËÄÉáÎåÈë
 182   1      
 183   1          TMOD = TMOD & ~ bT1_GATE & ~ bT1_CT & ~ MASK_T1_MOD | bT1_M1;              //0X20£¬Timer1×÷Îª8Î»×Ô¶¯ÖØ
             -ÔØ¶¨Ê±Æ÷
 184   1          T2MOD = T2MOD | bTMR_CLK | bT1_CLK;                                        //Timer1Ê±ÖÓÑ¡Ôñ
 185   1          TH1 = 0-x;                                                                 //12MHz¾§Õñ,buad/12ÎªÊµ¼ÊÐè
             -ÉèÖÃ²¨ÌØÂÊ
 186   1          TR1 = 1;                                                                   //Æô¶¯¶¨Ê±Æ÷1
 187   1          TI = 1;
 188   1          REN = 1;                                                                   //´®¿Ú0½ÓÊÕÊ¹ÄÜ
 189   1      }
 190          
 191          /*******************************************************************************
 192          * Function Name  : CH559UART0RcvByte()
 193          * Description    : CH559UART0½ÓÊÕÒ»¸ö×Ö½Ú
 194          * Input          : None
 195          * Output         : None
 196          * Return         : SBUF
 197          *******************************************************************************/
 198          UINT8  CH559UART0RcvByte( )
 199          {
 200   1          while(RI == 0);                                                            //²éÑ¯½ÓÊÕ£¬ÖÐ¶Ï·½Ê½¿É²»ÓÃ
 201   1          RI = 0;
 202   1          return SBUF;
 203   1      }
 204          
 205          /*******************************************************************************
 206          * Function Name  : CH559UART0SendByte(UINT8 SendDat)
 207          * Description    : CH559UART0·¢ËÍÒ»¸ö×Ö½Ú
 208          * Input          : UINT8 SendDat£»Òª·¢ËÍµÄÊý¾Ý
 209          * Output         : None
 210          * Return         : None
 211          *******************************************************************************/
 212          void CH559UART0SendByte(UINT8 SendDat)
 213          {
 214   1        SBUF = SendDat;                                                              //²éÑ¯·¢ËÍ£¬ÖÐ¶Ï·½Ê½¿É²»ÓÃÏÂ
             -Ãæ2ÌõÓï¾ä,µ«·¢ËÍÇ°ÐèTI=0
 215   1        while(TI ==0);
 216   1        TI = 1;
 217   1      }


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    229    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =   ----       5
   PDATA SIZE       =   ----    ----
   DATA SIZE        =   ----    ----
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
